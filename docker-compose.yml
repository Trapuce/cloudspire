services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hotel_api
    restart: unless-stopped
    working_dir: /var/www
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=hotel_management
      - DB_USERNAME=hotel_user
      - DB_PASSWORD=hotel_password
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ".:/var/www"
    ports:
      - "8000:8000"
    networks:
      - hotel_network

  mysql:
    image: mysql:8.0
    container_name: hotel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: hotel_management
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: hotel_user
      MYSQL_PASSWORD: hotel_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - hotel_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 5s
      timeout: 3s
      retries: 10

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hotel_frontend
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    ports:
      - "3000:3000"
    networks:
      - hotel_network
    depends_on:
      - api

volumes:
  mysql_data:

networks:
  hotel_network:
    driver: bridge
